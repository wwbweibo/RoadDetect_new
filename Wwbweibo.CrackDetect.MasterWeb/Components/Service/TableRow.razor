@using Wwbweibo.CrackDetect.Models
@inject Wwbweibo.CrackDetect.MasterService.Services.MasterService MasterService;
@inject IJSRuntime JSRuntime;
<tr>
    <td>@Index</td>
    <td>
        @Service.Item1
    </td>
    <td>
        @if(ServiceType == ServiceType.MasterService)
        {
            <label>管理服务</label>
        }else if(ServiceType == ServiceType.DataCalc)
        {
            <label>Python图像计算服务</label>
        }else if (ServiceType == ServiceType.DataCollect)
        {
            <label>数据采集服务</label>
        }
    </td>
    <td>
        @Service.Item2.ToString()
    </td>
    <td>
        @if (ServiceType == ServiceType.DataCollect)
        {
            if (Service.Item2 == ServiceStatusEnum.Idle)
            {
                <button class="btn btn-primary" @onclick="() => { StartDataCollect(Service.Item1); }" >开始数据采集</button>
            }
            else if (Service.Item2 == ServiceStatusEnum.Running)
            {
                <button class="btn btn-primary" @onclick="() => { StopDataCollect(Service.Item1); }" >停止数据采集</button>
            }
        }
        @if (Service.Item2 == ServiceStatusEnum.Idle || Service.Item2 == ServiceStatusEnum.Running)
        {
            <button class="btn btn-primary" @onclick="()=> { StopService(ServiceType, Service.Item1); }">停止</button>
        }
        else
        {
            <button class="btn btn-primary" @onclick="() => { StartService(ServiceType, Service.Item1); }">启动</button>
        }
    </td>
</tr>

@code {

    [Parameter]
    public ServiceType ServiceType { get; set; }

    [Parameter]
    public Tuple<string, ServiceStatusEnum> Service { get; set; }

    [Parameter]
    public int Index { get; set; }

    private void StopService(ServiceType serviceType, string serviceId)
    {
        if(serviceType == ServiceType.MasterService)
        {
            JSRuntime.InvokeVoidAsync("show_alter", "不能停止管理服务");
            return;
        }
        MasterService.StopService(serviceType, serviceId);
        JSRuntime.InvokeVoidAsync("show_alter", "命令发送成功");
    }

    private void StartService(ServiceType serviceType, string serviceId)
    {
        MasterService.StartService(serviceType, serviceId);
        JSRuntime.InvokeVoidAsync("show_alter", "命令发送成功");
    }

    private void StartDataCollect(string serviceId)
    {
        MasterService.StartDataCollect(serviceId);
        JSRuntime.InvokeVoidAsync("show_alter", "命令发送成功");
    }

    private void StopDataCollect(string serviceId)
    {

        MasterService.StopDataCollect(serviceId);
        JSRuntime.InvokeVoidAsync("show_alter", "命令发送成功");
    }
}

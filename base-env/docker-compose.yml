version: "3.7"

services:
    zoo1:
        image: zookeeper
        restart: unless-stopped
        hostname: zoo1
        container_name: zoo1
        ports:
            - 2182:2181 
        environment:
        ZOO_MY_ID: 1
        ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
        volumes:
            - ./zookeeper/zoo1/data:/data
            - ./zookeeper/zoo1/datalog:/datalog
        
  
    zoo2:
        image: zookeeper
        restart: unless-stopped
        hostname: zoo2
        container_name: zoo2
        ports:
            - 2183:2181
        environment:
            ZOO_MY_ID: 2
            ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=0.0.0.0:2888:3888;2181 server.3=zoo3:2888:3888;2181
        volumes:
            - ./zookeeper/zoo2/data:/data
            - ./zookeeper/zoo2/datalog:/datalog
        
    zoo3:
        image: zookeeper
        restart: unless-stopped
        hostname: zoo3
        container_name: zoo3
        ports:
            - 2184:2181
        environment:
            ZOO_MY_ID: 3
            ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=0.0.0.0:2888:3888;2181
        volumes:
            - ./zookeeper/zoo3/data:/data
            - ./zookeeper/zoo3/datalog:/datalog
# kafka server
    kafka:
        build: 
            context: "./"
            dockerfile: "Dockerfile"
        links: 
            - zookeeper1
            - zookeeper2
            - zookeeper3
        ports: 
            - "9092:9092"
        restart: always
        volumes: 
            - ./kafka:/kafka
# redis server
    redis:
        image: redis:latest
        expose:
            - "6379"
        ports:
            - "6379:6379"
        restart: always
        volumes:
            - "./redis:/data"